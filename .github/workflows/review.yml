name: review

on:
  pull_request_review:
    types: [submitted]

permissions: {}

jobs:
  review:
    
    env:
      SHA: ${{ github.event.pull_request.head.sha }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      RUN_ID: ${{ steps.wait-for-build.outputs.run_id }}
      RUN_NUMBER: ${{ steps.wait-for-build.outputs.run_number }}
      WORKFLOW_ID: ${{ steps.wait-for-build.outputs.workflow_id }}
      CONCLUSION: ${{ steps.wait-for-build.outputs.conclusion }}

    runs-on: ubuntu-latest
    steps:
      - name: Wait for Build to Complete
        id: wait-for-build
        run: | 
          START_TIME=$(date +%s)
  
          while true; do
            # Fetch latest workflow run matching SHA and workflow name
            WORKFLOW_RUN=$(gh api /repos/${{ github.repository }}/actions/runs \
              --jq --arg sha "$SHA" --arg workflow_name "$WORKFLOW_NAME" \
              '.workflow_runs | map(select(.head_sha == $sha and .name == $workflow_name)) | first')
  
            if [ -z "$WORKFLOW_RUN" ]; then
              echo "No build workflow run found for commit $SHA."
            else
              STATUS=$(echo "$WORKFLOW_RUN" | jq -r '.conclusion')
              RUN_NUMBER=$(echo "$WORKFLOW_RUN" | jq -r '.run_number')
              RUN_ID=$(echo "$WORKFLOW_RUN" | jq -r '.id')
              WORKFLOW_ID=$(echo "$WORKFLOW_RUN" | jq -r '.workflow_id')
  
              echo "Build workflow status: $STATUS"
  
              if [[ ",$TERMINATING_STATUS," == *",$STATUS,"* ]]; then
                echo "Build workflow finished with conclusion: $STATUS"
                {
                  echo "conclusion=$STATUS"
                  echo "run_id=$RUN_ID"
                  echo "run_number=$RUN_NUMBER"
                  echo "workflow_id=$WORKFLOW_ID"
                } >> "$GITHUB_OUTPUT"
                break
              fi
            fi
  
            # Check if timeout has been reached
            ELAPSED=$(( $(date +%s) - START_TIME ))
            if [ $ELAPSED -ge $TIMEOUT ]; then
              echo "Timeout reached. Build workflow did not succeed within $TIMEOUT seconds."
              echo "conclusion=timed_out" >> "$GITHUB_OUTPUT"
              break
            fi
  
            sleep $INTERVAL
          done

      - name: Set approval status
        id: check_approval
        run: |
          if [[ "${GITHUB_EVENT_REVIEW_STATE}" == "approved" && ("${GITHUB_EVENT_REVIEW_USER_LOGIN}" == "hakenmt" || "${GITHUB_EVENT_REVIEW_USER_LOGIN}" == "github-actions[bot]") ]]; then
              echo "âœ… Test a since review was performed by an allowed user."
              echo "approved=true" >> $GITHUB_ENV
          else
              echo "ðŸš¨ Workflow requires admin review approval."
              exit 1
          fi
        env:
          GITHUB_EVENT_REVIEW_STATE: ${{ github.event.review.state }}
          GITHUB_EVENT_REVIEW_USER_LOGIN: ${{ github.event.review.user.login }}
